


ARM Macro Assembler    Page 1 


    1 00000000         ;*******************************************************
                       ***********************
    2 00000000         ;
    3 00000000         ;! @file startup_keil.s
    4 00000000         ;!
    5 00000000         ;! @brief Definitions for Apollo3 interrupt handlers, th
                       e vector table, and the stack.
    6 00000000         ;
    7 00000000         ;*******************************************************
                       ***********************
    8 00000000         
    9 00000000         ;*******************************************************
                       ***********************
   10 00000000         ;
   11 00000000         ; Copyright (c) 2019, Ambiq Micro
   12 00000000         ; All rights reserved.
   13 00000000         ; 
   14 00000000         ; Redistribution and use in source and binary forms, wit
                       h or without
   15 00000000         ; modification, are permitted provided that the followin
                       g conditions are met:
   16 00000000         ; 
   17 00000000         ; 1. Redistributions of source code must retain the abov
                       e copyright notice,
   18 00000000         ; this list of conditions and the following disclaimer.
   19 00000000         ; 
   20 00000000         ; 2. Redistributions in binary form must reproduce the a
                       bove copyright
   21 00000000         ; notice, this list of conditions and the following disc
                       laimer in the
   22 00000000         ; documentation and/or other materials provided with the
                        distribution.
   23 00000000         ; 
   24 00000000         ; 3. Neither the name of the copyright holder nor the na
                       mes of its
   25 00000000         ; contributors may be used to endorse or promote product
                       s derived from this
   26 00000000         ; software without specific prior written permission.
   27 00000000         ; 
   28 00000000         ; Third party software included in this distribution is 
                       subject to the
   29 00000000         ; additional license terms as defined in the /docs/licen
                       ses directory.
   30 00000000         ; 
   31 00000000         ; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
                        CONTRIBUTORS "AS IS"
   32 00000000         ; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT 
                       NOT LIMITED TO, THE
   33 00000000         ; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR 
                       A PARTICULAR PURPOSE
   34 00000000         ; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER
                        OR CONTRIBUTORS BE
   35 00000000         ; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
                       EXEMPLARY, OR
   36 00000000         ; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, 
                       PROCUREMENT OF
   37 00000000         ; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PR
                       OFITS; OR BUSINESS
   38 00000000         ; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIAB



ARM Macro Assembler    Page 2 


                       ILITY, WHETHER IN
   39 00000000         ; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGE
                       NCE OR OTHERWISE)
   40 00000000         ; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EV
                       EN IF ADVISED OF THE
   41 00000000         ; POSSIBILITY OF SUCH DAMAGE.
   42 00000000         ;
   43 00000000         ; This is part of revision 2.2.0 of the AmbiqSuite Devel
                       opment Package.
   44 00000000         ;
   45 00000000         ;*******************************************************
                       ***********************
   46 00000000         
   47 00000000         ;*******************************************************
                       ***********************
   48 00000000         ;
   49 00000000         ; <o> Stack Size (in Bytes) <0x0-0xFFFFFFFF:8>
   50 00000000         ;*******************************************************
                       *****************
   51 00000000 00001000 
                       Stack   EQU              0x00001000
   52 00000000         
   53 00000000         ;*******************************************************
                       ***********************
   54 00000000         ;
   55 00000000         ; <o> Heap Size (in Bytes) <0x0-0xFFFFFFFF:8>
   56 00000000         ;
   57 00000000         ;*******************************************************
                       ***********************
   58 00000000 00000000 
                       Heap    EQU              0x00000000
   59 00000000         
   60 00000000         ;*******************************************************
                       ***********************
   61 00000000         ;
   62 00000000         ; Allocate space for the stack.
   63 00000000         ;
   64 00000000         ;*******************************************************
                       ***********************
   65 00000000                 AREA             STACK, NOINIT, READWRITE, ALIGN
=3
   66 00000000         StackMem
   67 00000000                 SPACE            Stack
   68 00001000         __initial_sp
   69 00001000         
   70 00001000         ;*******************************************************
                       ***********************
   71 00001000         ;
   72 00001000         ; Allocate space for the heap.
   73 00001000         ;
   74 00001000         ;*******************************************************
                       ***********************
   75 00001000                 AREA             HEAP, NOINIT, READWRITE, ALIGN=
3
   76 00000000         __heap_base
   77 00000000         HeapMem
   78 00000000                 SPACE            Heap
   79 00000000         __heap_limit
   80 00000000         



ARM Macro Assembler    Page 3 


   81 00000000         ;*******************************************************
                       ***********************
   82 00000000         ;
   83 00000000         ; Indicate that the code in this file preserves 8-byte a
                       lignment of the stack.
   84 00000000         ;
   85 00000000         ;*******************************************************
                       ***********************
   86 00000000                 PRESERVE8
   87 00000000         
   88 00000000         ;*******************************************************
                       ***********************
   89 00000000         ;
   90 00000000         ; Place code into the reset code section.
   91 00000000         ;
   92 00000000         ;*******************************************************
                       ***********************
   93 00000000                 AREA             RESET, CODE, READONLY
   94 00000000                 THUMB
   95 00000000         
   96 00000000         ;*******************************************************
                       ***********************
   97 00000000         ;
   98 00000000         ; The vector table.
   99 00000000         ;
  100 00000000         ;*******************************************************
                       ***********************
  101 00000000         ;
  102 00000000         ; Note: Aliasing and weakly exporting am_mpufault_isr, a
                       m_busfault_isr, and
  103 00000000         ; am_usagefault_isr does not work if am_fault_isr is def
                       ined externally.
  104 00000000         ; Therefore, we'll explicitly use am_fault_isr in the ta
                       ble for those vectors.
  105 00000000         ;
  106 00000000         
  107 00000000                 EXPORT           __Vectors
  108 00000000         __Vectors
  109 00000000 00001000        DCD              StackMem + Stack ; Top of Stack
                                                            
  110 00000004 00000000        DCD              Reset_Handler ; Reset Handler
  111 00000008 00000000        DCD              NMI_Handler ; NMI Handler
  112 0000000C 00000000        DCD              HardFault_Handler ; Hard Fault 
                                                            Handler
  113 00000010 00000000        DCD              MemManage_Handler ; The MPU fau
                                                            lt handler
  114 00000014 00000000        DCD              BusFault_Handler ; The bus faul
                                                            t handler
  115 00000018 00000000        DCD              UsageFault_Handler ; The usage 
                                                            fault handler
  116 0000001C 00000000        DCD              SecureFault_Handler ; Secure fa
                                                            ult handler
  117 00000020 00000000        DCD              0           ; Reserved
  118 00000024 00000000        DCD              0           ; Reserved
  119 00000028 00000000        DCD              0           ; Reserved
  120 0000002C 00000000        DCD              SVC_Handler ; SVCall handler
  121 00000030 00000000        DCD              DebugMon_Handler ; Debug monito
                                                            r handler
  122 00000034 00000000        DCD              0           ; Reserved



ARM Macro Assembler    Page 4 


  123 00000038 00000000        DCD              PendSV_Handler ; The PendSV han
                                                            dler
  124 0000003C 00000000        DCD              SysTick_Handler ; The SysTick h
                                                            andler
  125 00000040         
  126 00000040         ;
  127 00000040         ; Peripheral Interrupts
  128 00000040         ;
  129 00000040 00000000        DCD              am_brownout_isr ;  0: Reserved
  130 00000044 00000000        DCD              am_watchdog_isr ;  1: Reserved
  131 00000048 00000000        DCD              am_rtc_isr  ;  2: RTC
  132 0000004C 00000000        DCD              am_vcomp_isr ;  3: Voltage Comp
                                                            arator
  133 00000050 00000000        DCD              am_ioslave_ios_isr ;  4: I/O Sl
                                                            ave general
  134 00000054 00000000        DCD              am_ioslave_acc_isr ;  5: I/O Sl
                                                            ave access
  135 00000058 00000000        DCD              am_iomaster0_isr 
                                                            ;  6: I/O Master 0
  136 0000005C 00000000        DCD              am_iomaster1_isr 
                                                            ;  7: I/O Master 1
  137 00000060 00000000        DCD              am_iomaster2_isr 
                                                            ;  8: I/O Master 2
  138 00000064 00000000        DCD              am_iomaster3_isr 
                                                            ;  9: I/O Master 3
  139 00000068 00000000        DCD              am_iomaster4_isr 
                                                            ; 10: I/O Master 4
  140 0000006C 00000000        DCD              am_iomaster5_isr 
                                                            ; 11: I/O Master 5
  141 00000070 00000000        DCD              am_ble_isr  ; 12: BLEIF
  142 00000074 00000000        DCD              am_gpio_isr ; 13: GPIO
  143 00000078 00000000        DCD              am_ctimer_isr ; 14: CTIMER
  144 0000007C 00000000        DCD              am_uart_isr ; 15: UART0
  145 00000080 00000000        DCD              am_uart1_isr ; 16: UART1
  146 00000084 00000000        DCD              am_scard_isr ; 17: SCARD
  147 00000088 00000000        DCD              am_adc_isr  ; 18: ADC
  148 0000008C 00000000        DCD              am_pdm0_isr ; 19: PDM
  149 00000090 00000000        DCD              am_mspi0_isr ; 20: MSPI0
  150 00000094 00000000        DCD              am_software0_isr 
                                                            ; 21: SOFTWARE0
  151 00000098 00000000        DCD              am_stimer_isr 
                                                            ; 22: SYSTEM TIMER
  152 0000009C 00000000        DCD              am_stimer_cmpr0_isr ; 23: SYSTE
                                                            M TIMER COMPARE0
  153 000000A0 00000000        DCD              am_stimer_cmpr1_isr ; 24: SYSTE
                                                            M TIMER COMPARE1
  154 000000A4 00000000        DCD              am_stimer_cmpr2_isr ; 25: SYSTE
                                                            M TIMER COMPARE2
  155 000000A8 00000000        DCD              am_stimer_cmpr3_isr ; 26: SYSTE
                                                            M TIMER COMPARE3
  156 000000AC 00000000        DCD              am_stimer_cmpr4_isr ; 27: SYSTE
                                                            M TIMER COMPARE4
  157 000000B0 00000000        DCD              am_stimer_cmpr5_isr ; 28: SYSTE
                                                            M TIMER COMPARE5
  158 000000B4 00000000        DCD              am_stimer_cmpr6_isr ; 29: SYSTE
                                                            M TIMER COMPARE6
  159 000000B8 00000000        DCD              am_stimer_cmpr7_isr ; 30: SYSTE
                                                            M TIMER COMPARE7
  160 000000BC 00000000        DCD              am_clkgen_isr ; 31: CLKGEN



ARM Macro Assembler    Page 5 


  161 000000C0         
  162 000000C0         __Vectors_End
  163 000000C0         
  164 000000C0 000000C0 
                       __Vectors_Size
                               EQU              __Vectors_End - __Vectors
  165 000000C0         
  166 000000C0         ;*******************************************************
                       ***********************
  167 000000C0         ;
  168 000000C0         ; Place code immediately following vector table.
  169 000000C0         ;
  170 000000C0         ;*******************************************************
                       ***********************
  171 000000C0         ;*******************************************************
                       ***********************
  172 000000C0         ;
  173 000000C0         ; The Patch table.
  174 000000C0         ;
  175 000000C0         ; The patch table should pad the vector table size to a 
                       total of 64 entries
  176 000000C0         ; (16 core + 48 periph) such that code begins at offset 
                       0x100.
  177 000000C0         ;
  178 000000C0         ;*******************************************************
                       ***********************
  179 000000C0                 EXPORT           __Patchable
  180 000000C0         __Patchable
  181 000000C0 00000000        DCD              0           ; 32
  182 000000C4 00000000        DCD              0           ; 33
  183 000000C8 00000000        DCD              0           ; 34
  184 000000CC 00000000        DCD              0           ; 35
  185 000000D0 00000000        DCD              0           ; 36
  186 000000D4 00000000        DCD              0           ; 37
  187 000000D8 00000000        DCD              0           ; 38
  188 000000DC 00000000        DCD              0           ; 39
  189 000000E0 00000000        DCD              0           ; 40
  190 000000E4 00000000        DCD              0           ; 41
  191 000000E8 00000000        DCD              0           ; 42
  192 000000EC 00000000        DCD              0           ; 43
  193 000000F0 00000000        DCD              0           ; 44
  194 000000F4 00000000        DCD              0           ; 45
  195 000000F8 00000000        DCD              0           ; 46
  196 000000FC 00000000        DCD              0           ; 47
  197 00000100         
  198 00000100         ;*******************************************************
                       ***********************
  199 00000100         ;
  200 00000100         ; This is the code that gets called when the processor f
                       irst starts execution
  201 00000100         ; following a reset event.
  202 00000100         ;
  203 00000100         ;*******************************************************
                       ***********************
  204 00000100         Reset_Handler
                               PROC
  205 00000100                 EXPORT           Reset_Handler               [WE
AK]
  206 00000100                 IMPORT           __main



ARM Macro Assembler    Page 6 


  207 00000100         
  208 00000100         ;
  209 00000100         ; Enable the FPU.
  210 00000100         ;
  211 00000100 F64E 5088       MOVW             R0, #0xED88
  212 00000104 F2CE 0000       MOVT             R0, #0xE000
  213 00000108 6801            LDR              R1, [R0]
  214 0000010A F441 0170       ORR              R1, #0x00F00000
  215 0000010E 6001            STR              R1, [R0]
  216 00000110 F3BF 8F4F       DSB
  217 00000114 F3BF 8F6F       ISB
  218 00000118         
  219 00000118         ;
  220 00000118         ; Branch to main.
  221 00000118         ;
  222 00000118 4806            LDR              R0, =__main
  223 0000011A 4700            BX               R0
  224 0000011C         
  225 0000011C                 ENDP
  226 0000011C         
  227 0000011C         ;*******************************************************
                       ***********************
  228 0000011C         ;
  229 0000011C         ; Weak Exception Handlers.
  230 0000011C         ;
  231 0000011C         ;*******************************************************
                       ***********************
  232 0000011C         
  234 0000011C         HardFault_Handler
                               PROC
  235 0000011C                 EXPORT           HardFault_Handler           [WE
AK]
  236 0000011C E7FE            B                .
  237 0000011E                 ENDP
  238 0000011E         NMI_Handler
                               PROC
  239 0000011E                 EXPORT           NMI_Handler                 [WE
AK]
  240 0000011E E7FE            B                .
  241 00000120                 ENDP
  243 00000120         MemManage_Handler
                               PROC
  244 00000120                 EXPORT           MemManage_Handler           [WE
AK]
  245 00000120 E7FE            B                .
  246 00000122                 ENDP
  248 00000122         BusFault_Handler
                               PROC
  249 00000122                 EXPORT           BusFault_Handler            [WE
AK]
  250 00000122 E7FE            B                .
  251 00000124                 ENDP
  253 00000124         UsageFault_Handler
                               PROC
  254 00000124                 EXPORT           UsageFault_Handler          [WE
AK]
  255 00000124 E7FE            B                .
  256 00000126                 ENDP
  258 00000126         SecureFault_Handler



ARM Macro Assembler    Page 7 


                               PROC
  259 00000126                 EXPORT           SecureFault_Handler         [WE
AK]
  260 00000126 E7FE            B                .
  261 00000128                 ENDP
  262 00000128         SVC_Handler
                               PROC
  263 00000128                 EXPORT           SVC_Handler                 [WE
AK]
  264 00000128 E7FE            B                .
  265 0000012A                 ENDP
  266 0000012A         DebugMon_Handler
                               PROC
  267 0000012A                 EXPORT           DebugMon_Handler            [WE
AK]
  268 0000012A E7FE            B                .
  269 0000012C                 ENDP
  270 0000012C         PendSV_Handler
                               PROC
  271 0000012C                 EXPORT           PendSV_Handler              [WE
AK]
  272 0000012C E7FE            B                .
  273 0000012E                 ENDP
  274 0000012E         SysTick_Handler
                               PROC
  275 0000012E                 EXPORT           SysTick_Handler             [WE
AK]
  276 0000012E E7FE            B                .
  277 00000130                 ENDP
  278 00000130         
  280 00000130         am_default_isr
                               PROC
  281 00000130                 EXPORT           am_brownout_isr             [WE
AK]
  282 00000130                 EXPORT           am_watchdog_isr             [WE
AK]
  283 00000130                 EXPORT           am_rtc_isr                  [WE
AK]
  284 00000130                 EXPORT           am_vcomp_isr                [WE
AK]
  285 00000130                 EXPORT           am_ioslave_ios_isr          [WE
AK]
  286 00000130                 EXPORT           am_ioslave_acc_isr          [WE
AK]
  287 00000130                 EXPORT           am_iomaster0_isr            [WE
AK]
  288 00000130                 EXPORT           am_iomaster1_isr            [WE
AK]
  289 00000130                 EXPORT           am_iomaster2_isr            [WE
AK]
  290 00000130                 EXPORT           am_iomaster3_isr            [WE
AK]
  291 00000130                 EXPORT           am_iomaster4_isr            [WE
AK]
  292 00000130                 EXPORT           am_iomaster5_isr            [WE
AK]
  293 00000130                 EXPORT           am_ble_isr                  [WE
AK]
  294 00000130                 EXPORT           am_gpio_isr                 [WE



ARM Macro Assembler    Page 8 


AK]
  295 00000130                 EXPORT           am_ctimer_isr               [WE
AK]
  296 00000130                 EXPORT           am_uart_isr                 [WE
AK]
  297 00000130                 EXPORT           am_uart0_isr                [WE
AK]
  298 00000130                 EXPORT           am_uart1_isr                [WE
AK]
  299 00000130                 EXPORT           am_scard_isr                [WE
AK]
  300 00000130                 EXPORT           am_adc_isr                  [WE
AK]
  301 00000130                 EXPORT           am_pdm0_isr                 [WE
AK]
  302 00000130                 EXPORT           am_mspi0_isr                [WE
AK]
  303 00000130                 EXPORT           am_software0_isr            [WE
AK]
  304 00000130                 EXPORT           am_stimer_isr               [WE
AK]
  305 00000130                 EXPORT           am_stimer_cmpr0_isr         [WE
AK]
  306 00000130                 EXPORT           am_stimer_cmpr1_isr         [WE
AK]
  307 00000130                 EXPORT           am_stimer_cmpr2_isr         [WE
AK]
  308 00000130                 EXPORT           am_stimer_cmpr3_isr         [WE
AK]
  309 00000130                 EXPORT           am_stimer_cmpr4_isr         [WE
AK]
  310 00000130                 EXPORT           am_stimer_cmpr5_isr         [WE
AK]
  311 00000130                 EXPORT           am_stimer_cmpr6_isr         [WE
AK]
  312 00000130                 EXPORT           am_stimer_cmpr7_isr         [WE
AK]
  313 00000130                 EXPORT           am_clkgen_isr               [WE
AK]
  314 00000130         
  315 00000130         am_brownout_isr
  316 00000130         am_watchdog_isr
  317 00000130         am_rtc_isr
  318 00000130         am_vcomp_isr
  319 00000130         am_ioslave_ios_isr
  320 00000130         am_ioslave_acc_isr
  321 00000130         am_iomaster0_isr
  322 00000130         am_iomaster1_isr
  323 00000130         am_iomaster2_isr
  324 00000130         am_iomaster3_isr
  325 00000130         am_iomaster4_isr
  326 00000130         am_iomaster5_isr
  327 00000130         am_ble_isr
  328 00000130         am_gpio_isr
  329 00000130         am_ctimer_isr
  330 00000130         am_uart_isr
  331 00000130         am_uart0_isr
  332 00000130         am_uart1_isr
  333 00000130         am_scard_isr



ARM Macro Assembler    Page 9 


  334 00000130         am_adc_isr
  335 00000130         am_pdm0_isr
  336 00000130         am_mspi0_isr
  337 00000130         am_software0_isr
  338 00000130         am_stimer_isr
  339 00000130         am_stimer_cmpr0_isr
  340 00000130         am_stimer_cmpr1_isr
  341 00000130         am_stimer_cmpr2_isr
  342 00000130         am_stimer_cmpr3_isr
  343 00000130         am_stimer_cmpr4_isr
  344 00000130         am_stimer_cmpr5_isr
  345 00000130         am_stimer_cmpr6_isr
  346 00000130         am_stimer_cmpr7_isr
  347 00000130         am_clkgen_isr
  348 00000130         
  349 00000130         ; all device interrupts go here unless the weak label is
                        over
  350 00000130         ; ridden in the linker hard spin so the debugger will kn
                       ow it
  351 00000130         ; was an unhandled interrupt request a come-from-buffer 
                       or
  352 00000130         ; instruction trace hardware would sure be nice if you g
                       et here
  353 00000130 E7FE            B                .
  354 00000132         
  355 00000132                 ENDP
  356 00000132         
  357 00000132         ;*******************************************************
                       ***********************
  358 00000132         ;
  359 00000132         ; Align the end of the section.
  360 00000132         ;
  361 00000132         ;*******************************************************
                       ***********************
  362 00000132 00 00           ALIGN
  363 00000134         
  364 00000134         ;*******************************************************
                       ***********************
  365 00000134         ;
  366 00000134         ; Initialization of the heap and stack.
  367 00000134         ;
  368 00000134         ;*******************************************************
                       ***********************
  369 00000134 00000000        AREA             |.text|, CODE, READONLY
  370 00000000         
  371 00000000         ;*******************************************************
                       ***********************
  372 00000000         ;
  373 00000000         ; User Initial Stack & Heap.
  374 00000000         ;
  375 00000000         ;*******************************************************
                       ***********************
  376 00000000                 IF               :DEF: __MICROLIB
  381 00000000                 IMPORT           __use_two_region_memory
  382 00000000                 EXPORT           __user_initial_stackheap
  383 00000000         __user_initial_stackheap
                               PROC
  384 00000000 4802            LDR              R0, =HeapMem
  385 00000002 4903            LDR              R1, =(StackMem + Stack)



ARM Macro Assembler    Page 10 


  386 00000004 4A01            LDR              R2, =(HeapMem + Heap)
  387 00000006 4B03            LDR              R3, =StackMem
  388 00000008 4770            BX               LR
  389 0000000A         
  390 0000000A                 ENDP
  391 0000000A         
  392 0000000A                 ENDIF
  393 0000000A         
  394 0000000A         ;*******************************************************
                       ***********************
  395 0000000A         ;
  396 0000000A         ; Align the end of the section.
  397 0000000A         ;
  398 0000000A         ;*******************************************************
                       ***********************
  399 0000000A 00 00           ALIGN
  400 0000000C         
  401 0000000C         ;*******************************************************
                       ***********************
  402 0000000C         ;
  403 0000000C         ; All Done
  404 0000000C         ;
  405 0000000C         ;*******************************************************
                       ***********************
  406 0000000C                 END
              00000000 
              00001000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\bin\startup_keil.d -o.\bin\startup_keil.o -I.\RTE\_mspi_quad_
example -IF:\Keil_v5\ARM\PACK\AmbiqMicro\Apollo_DFP\1.2.0\Device\Include -IF:\K
eil_v5\ARM\CMSIS\Include --predefine="__UVISION_VERSION SETA 526" --predefine="
APOLLO3_1024 SETA 1" --list=.\listings\startup_keil.lst startup_keil.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

STACK 00000000

Symbol: STACK
   Definitions
      At line 65 in file startup_keil.s
   Uses
      None
Comment: STACK unused
StackMem 00000000

Symbol: StackMem
   Definitions
      At line 66 in file startup_keil.s
   Uses
      At line 109 in file startup_keil.s
      At line 385 in file startup_keil.s
      At line 387 in file startup_keil.s

__initial_sp 00001000

Symbol: __initial_sp
   Definitions
      At line 68 in file startup_keil.s
   Uses
      None
Comment: __initial_sp unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

HEAP 00000000

Symbol: HEAP
   Definitions
      At line 75 in file startup_keil.s
   Uses
      None
Comment: HEAP unused
HeapMem 00000000

Symbol: HeapMem
   Definitions
      At line 77 in file startup_keil.s
   Uses
      At line 384 in file startup_keil.s
      At line 386 in file startup_keil.s

__heap_base 00000000

Symbol: __heap_base
   Definitions
      At line 76 in file startup_keil.s
   Uses
      None
Comment: __heap_base unused
__heap_limit 00000000

Symbol: __heap_limit
   Definitions
      At line 79 in file startup_keil.s
   Uses
      None
Comment: __heap_limit unused
4 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

BusFault_Handler 00000122

Symbol: BusFault_Handler
   Definitions
      At line 248 in file startup_keil.s
   Uses
      At line 114 in file startup_keil.s
      At line 249 in file startup_keil.s

DebugMon_Handler 0000012A

Symbol: DebugMon_Handler
   Definitions
      At line 266 in file startup_keil.s
   Uses
      At line 121 in file startup_keil.s
      At line 267 in file startup_keil.s

HardFault_Handler 0000011C

Symbol: HardFault_Handler
   Definitions
      At line 234 in file startup_keil.s
   Uses
      At line 112 in file startup_keil.s
      At line 235 in file startup_keil.s

MemManage_Handler 00000120

Symbol: MemManage_Handler
   Definitions
      At line 243 in file startup_keil.s
   Uses
      At line 113 in file startup_keil.s
      At line 244 in file startup_keil.s

NMI_Handler 0000011E

Symbol: NMI_Handler
   Definitions
      At line 238 in file startup_keil.s
   Uses
      At line 111 in file startup_keil.s
      At line 239 in file startup_keil.s

PendSV_Handler 0000012C

Symbol: PendSV_Handler
   Definitions
      At line 270 in file startup_keil.s
   Uses
      At line 123 in file startup_keil.s
      At line 271 in file startup_keil.s

RESET 00000000

Symbol: RESET
   Definitions
      At line 93 in file startup_keil.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: RESET unused
Reset_Handler 00000100

Symbol: Reset_Handler
   Definitions
      At line 204 in file startup_keil.s
   Uses
      At line 110 in file startup_keil.s
      At line 205 in file startup_keil.s

SVC_Handler 00000128

Symbol: SVC_Handler
   Definitions
      At line 262 in file startup_keil.s
   Uses
      At line 120 in file startup_keil.s
      At line 263 in file startup_keil.s

SecureFault_Handler 00000126

Symbol: SecureFault_Handler
   Definitions
      At line 258 in file startup_keil.s
   Uses
      At line 116 in file startup_keil.s
      At line 259 in file startup_keil.s

SysTick_Handler 0000012E

Symbol: SysTick_Handler
   Definitions
      At line 274 in file startup_keil.s
   Uses
      At line 124 in file startup_keil.s
      At line 275 in file startup_keil.s

UsageFault_Handler 00000124

Symbol: UsageFault_Handler
   Definitions
      At line 253 in file startup_keil.s
   Uses
      At line 115 in file startup_keil.s
      At line 254 in file startup_keil.s

__Patchable 000000C0

Symbol: __Patchable
   Definitions
      At line 180 in file startup_keil.s
   Uses
      At line 179 in file startup_keil.s
Comment: __Patchable used once
__Vectors 00000000

Symbol: __Vectors



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 108 in file startup_keil.s
   Uses
      At line 107 in file startup_keil.s
      At line 164 in file startup_keil.s

__Vectors_End 000000C0

Symbol: __Vectors_End
   Definitions
      At line 162 in file startup_keil.s
   Uses
      At line 164 in file startup_keil.s
Comment: __Vectors_End used once
am_adc_isr 00000130

Symbol: am_adc_isr
   Definitions
      At line 334 in file startup_keil.s
   Uses
      At line 147 in file startup_keil.s
      At line 300 in file startup_keil.s

am_ble_isr 00000130

Symbol: am_ble_isr
   Definitions
      At line 327 in file startup_keil.s
   Uses
      At line 141 in file startup_keil.s
      At line 293 in file startup_keil.s

am_brownout_isr 00000130

Symbol: am_brownout_isr
   Definitions
      At line 315 in file startup_keil.s
   Uses
      At line 129 in file startup_keil.s
      At line 281 in file startup_keil.s

am_clkgen_isr 00000130

Symbol: am_clkgen_isr
   Definitions
      At line 347 in file startup_keil.s
   Uses
      At line 160 in file startup_keil.s
      At line 313 in file startup_keil.s

am_ctimer_isr 00000130

Symbol: am_ctimer_isr
   Definitions
      At line 329 in file startup_keil.s
   Uses
      At line 143 in file startup_keil.s
      At line 295 in file startup_keil.s




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

am_default_isr 00000130

Symbol: am_default_isr
   Definitions
      At line 280 in file startup_keil.s
   Uses
      None
Comment: am_default_isr unused
am_gpio_isr 00000130

Symbol: am_gpio_isr
   Definitions
      At line 328 in file startup_keil.s
   Uses
      At line 142 in file startup_keil.s
      At line 294 in file startup_keil.s

am_iomaster0_isr 00000130

Symbol: am_iomaster0_isr
   Definitions
      At line 321 in file startup_keil.s
   Uses
      At line 135 in file startup_keil.s
      At line 287 in file startup_keil.s

am_iomaster1_isr 00000130

Symbol: am_iomaster1_isr
   Definitions
      At line 322 in file startup_keil.s
   Uses
      At line 136 in file startup_keil.s
      At line 288 in file startup_keil.s

am_iomaster2_isr 00000130

Symbol: am_iomaster2_isr
   Definitions
      At line 323 in file startup_keil.s
   Uses
      At line 137 in file startup_keil.s
      At line 289 in file startup_keil.s

am_iomaster3_isr 00000130

Symbol: am_iomaster3_isr
   Definitions
      At line 324 in file startup_keil.s
   Uses
      At line 138 in file startup_keil.s
      At line 290 in file startup_keil.s

am_iomaster4_isr 00000130

Symbol: am_iomaster4_isr
   Definitions
      At line 325 in file startup_keil.s
   Uses



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 139 in file startup_keil.s
      At line 291 in file startup_keil.s

am_iomaster5_isr 00000130

Symbol: am_iomaster5_isr
   Definitions
      At line 326 in file startup_keil.s
   Uses
      At line 140 in file startup_keil.s
      At line 292 in file startup_keil.s

am_ioslave_acc_isr 00000130

Symbol: am_ioslave_acc_isr
   Definitions
      At line 320 in file startup_keil.s
   Uses
      At line 134 in file startup_keil.s
      At line 286 in file startup_keil.s

am_ioslave_ios_isr 00000130

Symbol: am_ioslave_ios_isr
   Definitions
      At line 319 in file startup_keil.s
   Uses
      At line 133 in file startup_keil.s
      At line 285 in file startup_keil.s

am_mspi0_isr 00000130

Symbol: am_mspi0_isr
   Definitions
      At line 336 in file startup_keil.s
   Uses
      At line 149 in file startup_keil.s
      At line 302 in file startup_keil.s

am_pdm0_isr 00000130

Symbol: am_pdm0_isr
   Definitions
      At line 335 in file startup_keil.s
   Uses
      At line 148 in file startup_keil.s
      At line 301 in file startup_keil.s

am_rtc_isr 00000130

Symbol: am_rtc_isr
   Definitions
      At line 317 in file startup_keil.s
   Uses
      At line 131 in file startup_keil.s
      At line 283 in file startup_keil.s

am_scard_isr 00000130




ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

Symbol: am_scard_isr
   Definitions
      At line 333 in file startup_keil.s
   Uses
      At line 146 in file startup_keil.s
      At line 299 in file startup_keil.s

am_software0_isr 00000130

Symbol: am_software0_isr
   Definitions
      At line 337 in file startup_keil.s
   Uses
      At line 150 in file startup_keil.s
      At line 303 in file startup_keil.s

am_stimer_cmpr0_isr 00000130

Symbol: am_stimer_cmpr0_isr
   Definitions
      At line 339 in file startup_keil.s
   Uses
      At line 152 in file startup_keil.s
      At line 305 in file startup_keil.s

am_stimer_cmpr1_isr 00000130

Symbol: am_stimer_cmpr1_isr
   Definitions
      At line 340 in file startup_keil.s
   Uses
      At line 153 in file startup_keil.s
      At line 306 in file startup_keil.s

am_stimer_cmpr2_isr 00000130

Symbol: am_stimer_cmpr2_isr
   Definitions
      At line 341 in file startup_keil.s
   Uses
      At line 154 in file startup_keil.s
      At line 307 in file startup_keil.s

am_stimer_cmpr3_isr 00000130

Symbol: am_stimer_cmpr3_isr
   Definitions
      At line 342 in file startup_keil.s
   Uses
      At line 155 in file startup_keil.s
      At line 308 in file startup_keil.s

am_stimer_cmpr4_isr 00000130

Symbol: am_stimer_cmpr4_isr
   Definitions
      At line 343 in file startup_keil.s
   Uses
      At line 156 in file startup_keil.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

      At line 309 in file startup_keil.s

am_stimer_cmpr5_isr 00000130

Symbol: am_stimer_cmpr5_isr
   Definitions
      At line 344 in file startup_keil.s
   Uses
      At line 157 in file startup_keil.s
      At line 310 in file startup_keil.s

am_stimer_cmpr6_isr 00000130

Symbol: am_stimer_cmpr6_isr
   Definitions
      At line 345 in file startup_keil.s
   Uses
      At line 158 in file startup_keil.s
      At line 311 in file startup_keil.s

am_stimer_cmpr7_isr 00000130

Symbol: am_stimer_cmpr7_isr
   Definitions
      At line 346 in file startup_keil.s
   Uses
      At line 159 in file startup_keil.s
      At line 312 in file startup_keil.s

am_stimer_isr 00000130

Symbol: am_stimer_isr
   Definitions
      At line 338 in file startup_keil.s
   Uses
      At line 151 in file startup_keil.s
      At line 304 in file startup_keil.s

am_uart0_isr 00000130

Symbol: am_uart0_isr
   Definitions
      At line 331 in file startup_keil.s
   Uses
      At line 297 in file startup_keil.s
Comment: am_uart0_isr used once
am_uart1_isr 00000130

Symbol: am_uart1_isr
   Definitions
      At line 332 in file startup_keil.s
   Uses
      At line 145 in file startup_keil.s
      At line 298 in file startup_keil.s

am_uart_isr 00000130

Symbol: am_uart_isr
   Definitions



ARM Macro Assembler    Page 8 Alphabetic symbol ordering
Relocatable symbols

      At line 330 in file startup_keil.s
   Uses
      At line 144 in file startup_keil.s
      At line 296 in file startup_keil.s

am_vcomp_isr 00000130

Symbol: am_vcomp_isr
   Definitions
      At line 318 in file startup_keil.s
   Uses
      At line 132 in file startup_keil.s
      At line 284 in file startup_keil.s

am_watchdog_isr 00000130

Symbol: am_watchdog_isr
   Definitions
      At line 316 in file startup_keil.s
   Uses
      At line 130 in file startup_keil.s
      At line 282 in file startup_keil.s

49 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 369 in file startup_keil.s
   Uses
      None
Comment: .text unused
__user_initial_stackheap 00000000

Symbol: __user_initial_stackheap
   Definitions
      At line 383 in file startup_keil.s
   Uses
      At line 382 in file startup_keil.s
Comment: __user_initial_stackheap used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

Heap 00000000

Symbol: Heap
   Definitions
      At line 58 in file startup_keil.s
   Uses
      At line 78 in file startup_keil.s
      At line 386 in file startup_keil.s

Stack 00001000

Symbol: Stack
   Definitions
      At line 51 in file startup_keil.s
   Uses
      At line 67 in file startup_keil.s
      At line 109 in file startup_keil.s
      At line 385 in file startup_keil.s

__Vectors_Size 000000C0

Symbol: __Vectors_Size
   Definitions
      At line 164 in file startup_keil.s
   Uses
      None
Comment: __Vectors_Size unused
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

__main 00000000

Symbol: __main
   Definitions
      At line 206 in file startup_keil.s
   Uses
      At line 222 in file startup_keil.s
Comment: __main used once
__use_two_region_memory 00000000

Symbol: __use_two_region_memory
   Definitions
      At line 381 in file startup_keil.s
   Uses
      None
Comment: __use_two_region_memory unused
2 symbols
402 symbols in table
